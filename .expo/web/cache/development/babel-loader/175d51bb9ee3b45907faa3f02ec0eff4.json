{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aj/Desktop/PROJECTS/REPORTGENERATOR/components/TopTime.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Clock from 'react-live-clock';\nexport default function TopTime(props) {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  useEffect(function () {\n    var timerID = setInterval(function () {\n      return tick();\n    }, 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.topTimeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, 0, date.getHours(), \":\", 0, date.getMinutes()), React.createElement(Text, {\n    style: styles.bottomTimeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, date.toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff'\n  },\n  topTimeText: {\n    textAlign: \"center\",\n    fontSize: 60\n  },\n  bottomTimeText: {\n    textAlign: \"center\",\n    fontSize: 40\n  }\n});","map":{"version":3,"sources":["/Users/aj/Desktop/PROJECTS/REPORTGENERATOR/components/TopTime.js"],"names":["React","Component","useState","useEffect","Clock","TopTime","props","Date","date","setDate","timerID","setInterval","tick","cleanup","clearInterval","styles","container","topTimeText","getHours","getMinutes","bottomTimeText","toLocaleTimeString","hour","minute","StyleSheet","create","backgroundColor","textAlign","fontSize"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;;;;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;AAGA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,kBACbJ,QAAQ,CAAC,IAAIK,IAAJ,EAAD,CADK;AAAA;AAAA,MAC9BC,IAD8B;AAAA,MACxBC,OADwB;;AAGrCN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIO,OAAO,GAAGC,WAAW,CAAE;AAAA,aAAMC,IAAI,EAAV;AAAA,KAAF,EAAgB,IAAhB,CAAzB;AAEA,WAAO,SAASC,OAAT,GAAmB;AACtBC,MAAAA,aAAa,CAACJ,OAAD,CAAb;AACD,KAFH;AAGA,GANO,CAAT;;AAOC,WAASE,IAAT,GAAgB;AACfH,IAAAA,OAAO,CAAC,IAAIF,IAAJ,EAAD,CAAP;AACA;;AAGF,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkC,CAAlC,EAAqCT,IAAI,CAACU,QAAL,EAArC,EAAsD,GAAtD,EAA2D,CAA3D,EAA8DV,IAAI,CAACW,UAAL,EAA9D,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCZ,IAAI,CAACa,kBAAL,CAAwB,EAAxB,EAA4B;AAACC,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,MAAM,EAAC;AAAzB,GAA5B,CAArC,CAFF,CADF;AAQD;AAGD,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,eAAe,EAAE;AADR,GADoB;AAI/BT,EAAAA,WAAW,EAAE;AACXU,IAAAA,SAAS,EAAE,QADA;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GAJkB;AAS/BR,EAAAA,cAAc,EAAE;AACdO,IAAAA,SAAS,EAAE,QADG;AAEdC,IAAAA,QAAQ,EAAE;AAFI;AATe,CAAlB,CAAf","sourcesContent":["\nimport React, { Component, useState, useEffect } from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\nimport Clock from 'react-live-clock';\n\n\nexport default function TopTime(props) {\n  const [date, setDate] = useState(new Date());\n\n  useEffect(() => {\n    var timerID = setInterval( () => tick(), 1000 );\n  \n    return function cleanup() {\n        clearInterval(timerID);\n      };\n   });\n   function tick() {\n    setDate(new Date());\n   }\n\n  \n  return (\n    <View style={styles.container}>\n      <Text style={styles.topTimeText}>{0}{date.getHours()}{\":\"}{0}{date.getMinutes()}</Text>\n      <Text style={styles.bottomTimeText}>{date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</Text>\n\n    </View>\n  );\n\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n  },\n  topTimeText: {\n    textAlign: \"center\",\n    fontSize: 60,\n\n  },\n  bottomTimeText: {\n    textAlign: \"center\",\n    fontSize: 40,\n\n  }\n\n});\n"]},"metadata":{},"sourceType":"module"}