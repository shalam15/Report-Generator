{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aj/Desktop/PROJECTS/REPORTGENERATOR/components/PatrolForm.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { CheckBox } from 'react-native-elements';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nexport default function PatrolForms(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      Patrol = _useState2[0],\n      setPatrol = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      LockedDoors = _useState4[0],\n      setLockedDoors = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      UnLockedDoors = _useState6[0],\n      setUnLockedDoors = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      MonitoredCamera = _useState8[0],\n      setMonitoredCamera = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      SecurityRisk = _useState10[0],\n      setSecurityRisk = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      ExtraNotes = _useState12[0],\n      setExtraNotes = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      AttachedFile = _useState14[0],\n      setAttachedFile = _useState14[1];\n\n  return React.createElement(KeyboardAwareScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(CheckBox, {\n    checkedColor: \"blue\",\n    uncheckedColor: \"red\",\n    title: \"Patrol\",\n    checked: Patrol,\n    onPress: function onPress() {\n      return setPatrol(!Patrol);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.textAreaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textArea,\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Type something\",\n    placeholderTextColor: \"grey\",\n    numberOfLines: 5,\n    multiline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  })), React.createElement(CheckBox, {\n    checkedColor: \"blue\",\n    uncheckedColor: \"red\",\n    title: \"Locked Doors\",\n    checked: LockedDoors,\n    onPress: function onPress() {\n      return setLockedDoors(!LockedDoors);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.textAreaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textArea,\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Type something\",\n    placeholderTextColor: \"grey\",\n    numberOfLines: 5,\n    multiline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), React.createElement(CheckBox, {\n    checkedColor: \"blue\",\n    uncheckedColor: \"red\",\n    title: \"Unlocked Doors\",\n    checked: UnLockedDoors,\n    onPress: function onPress() {\n      return setUnLockedDoors(!UnLockedDoors);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.textAreaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textArea,\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Type something\",\n    placeholderTextColor: \"grey\",\n    numberOfLines: 5,\n    multiline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), React.createElement(CheckBox, {\n    checkedColor: \"blue\",\n    uncheckedColor: \"red\",\n    title: \"Monitored Camera\",\n    checked: MonitoredCamera,\n    onPress: function onPress() {\n      return setMonitoredCamera(!MonitoredCamera);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.textAreaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textArea,\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Type something\",\n    placeholderTextColor: \"grey\",\n    numberOfLines: 5,\n    multiline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })), React.createElement(CheckBox, {\n    checkedColor: \"blue\",\n    uncheckedColor: \"red\",\n    title: \"No Security Risk, All CLear for the Hour\",\n    checked: SecurityRisk,\n    onPress: function onPress() {\n      return setSecurityRisk(!SecurityRisk);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.textAreaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textArea,\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Type something\",\n    placeholderTextColor: \"grey\",\n    numberOfLines: 5,\n    multiline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), React.createElement(CheckBox, {\n    checkedColor: \"blue\",\n    uncheckedColor: \"red\",\n    title: \"Extra Notes\",\n    checked: ExtraNotes,\n    onPress: function onPress() {\n      return setExtraNotes(!ExtraNotes);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.textAreaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textArea,\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Type something\",\n    placeholderTextColor: \"grey\",\n    numberOfLines: 5,\n    multiline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  })), React.createElement(CheckBox, {\n    checkedColor: \"blue\",\n    uncheckedColor: \"red\",\n    title: \"Attached Files\",\n    checked: AttachedFile,\n    onPress: function onPress() {\n      return setAttachedFile(!AttachedFile);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.textAreaContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textArea,\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Type something\",\n    placeholderTextColor: \"grey\",\n    numberOfLines: 5,\n    multiline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center'\n  },\n  textAreaContainer: {\n    borderColor: 'lightgrey',\n    borderWidth: 1,\n    padding: 5,\n    marginBottom: 15,\n    marginLeft: 10,\n    marginRight: 10,\n    backgroundColor: 'lightgrey'\n  },\n  textArea: {\n    color: '#000',\n    height: 50,\n    justifyContent: \"flex-start\"\n  }\n});","map":{"version":3,"sources":["/Users/aj/Desktop/PROJECTS/REPORTGENERATOR/components/PatrolForm.js"],"names":["React","Component","useState","useEffect","CheckBox","KeyboardAwareScrollView","PatrolForms","props","Patrol","setPatrol","LockedDoors","setLockedDoors","UnLockedDoors","setUnLockedDoors","MonitoredCamera","setMonitoredCamera","SecurityRisk","setSecurityRisk","ExtraNotes","setExtraNotes","AttachedFile","setAttachedFile","styles","container","textAreaContainer","textArea","StyleSheet","create","justifyContent","borderColor","borderWidth","padding","marginBottom","marginLeft","marginRight","backgroundColor","color","height"],"mappings":"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","sourcesContent":["\nimport React, { Component, useState, useEffect } from 'react';\nimport { StyleSheet, TextInput, View, Text, } from 'react-native';\nimport { CheckBox } from 'react-native-elements'\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\n\n\nexport default function PatrolForms(props) {\n    const [Patrol, setPatrol] = useState(false);\n    const [LockedDoors, setLockedDoors] = useState(false);\n    const [UnLockedDoors, setUnLockedDoors] = useState(false);\n    const [MonitoredCamera, setMonitoredCamera] = useState(false);\n    const [SecurityRisk, setSecurityRisk] = useState(false);\n    const [ExtraNotes, setExtraNotes] = useState(false);\n    const [AttachedFile, setAttachedFile] = useState(false);\n\n\n\n\n    return (\n        <KeyboardAwareScrollView>\n\n\n        <View style={styles.container}>\n            <CheckBox\n                checkedColor='blue'\n                uncheckedColor='red'\n                title='Patrol'\n                checked={Patrol}\n                onPress={() => setPatrol(!Patrol)}\n            />\n            <View style={styles.textAreaContainer} >\n            <TextInput\n               style={styles.textArea}\n               underlineColorAndroid=\"transparent\"\n               placeholder=\"Type something\"\n               placeholderTextColor=\"grey\"\n               numberOfLines={5}\n               multiline={true}\n                />\n                </View>\n            <CheckBox\n                checkedColor='blue'\n                uncheckedColor='red'\n                title='Locked Doors'\n                checked={LockedDoors}\n                onPress={() => setLockedDoors(!LockedDoors)}\n\n            />\n            <View style={styles.textAreaContainer} >\n            <TextInput\n               style={styles.textArea}\n               underlineColorAndroid=\"transparent\"\n               placeholder=\"Type something\"\n               placeholderTextColor=\"grey\"\n               numberOfLines={5}\n               multiline={true}\n                />\n                </View>\n            <CheckBox\n                checkedColor='blue'\n                uncheckedColor='red'\n                title='Unlocked Doors'\n                checked={UnLockedDoors}\n                onPress={() => setUnLockedDoors(!UnLockedDoors)}\n            />\n            <View style={styles.textAreaContainer} >\n            <TextInput\n               style={styles.textArea}\n               underlineColorAndroid=\"transparent\"\n               placeholder=\"Type something\"\n               placeholderTextColor=\"grey\"\n               numberOfLines={5}\n               multiline={true}\n                />\n                </View>\n            <CheckBox\n                checkedColor='blue'\n                uncheckedColor='red'\n                title='Monitored Camera'\n                checked={MonitoredCamera}\n                onPress={() => setMonitoredCamera(!MonitoredCamera)}\n            />\n            <View style={styles.textAreaContainer} >\n            <TextInput\n               style={styles.textArea}\n               underlineColorAndroid=\"transparent\"\n               placeholder=\"Type something\"\n               placeholderTextColor=\"grey\"\n               numberOfLines={5}\n               multiline={true}\n                />\n                </View>\n            <CheckBox\n                checkedColor='blue'\n                uncheckedColor='red'\n                title='No Security Risk, All CLear for the Hour'\n                checked={SecurityRisk}\n                onPress={() => setSecurityRisk(!SecurityRisk)}\n            />\n            <View style={styles.textAreaContainer} >\n            <TextInput\n               style={styles.textArea}\n               underlineColorAndroid=\"transparent\"\n               placeholder=\"Type something\"\n               placeholderTextColor=\"grey\"\n               numberOfLines={5}\n               multiline={true}\n                />\n                </View>\n            <CheckBox\n                checkedColor='blue'\n                uncheckedColor='red'\n                title='Extra Notes'\n                checked={ExtraNotes}\n                onPress={() => setExtraNotes(!ExtraNotes)}\n            />\n            <View style={styles.textAreaContainer} >\n            <TextInput\n               style={styles.textArea}\n               underlineColorAndroid=\"transparent\"\n               placeholder=\"Type something\"\n               placeholderTextColor=\"grey\"\n               numberOfLines={5}\n               multiline={true}\n                />\n                </View>\n            <CheckBox\n                checkedColor='blue'\n                uncheckedColor='red'\n                title='Attached Files'\n                checked={AttachedFile}\n                onPress={() => setAttachedFile(!AttachedFile)}\n            />\n            <View style={styles.textAreaContainer} >\n            <TextInput\n               style={styles.textArea}\n               underlineColorAndroid=\"transparent\"\n               placeholder=\"Type something\"\n               placeholderTextColor=\"grey\"\n               numberOfLines={5}\n               multiline={true}\n                />\n                </View>\n        </View>\n        </KeyboardAwareScrollView>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'center',\n\n    },\n    textAreaContainer: {\n\n      borderColor: 'lightgrey',\n      borderWidth: 1,\n      padding: 5,\n      marginBottom:15,\n      marginLeft:10,\n      marginRight:10,\n      backgroundColor:'lightgrey'\n\n    },\n    textArea: {\n        color:'#000',\n      height: 50,\n      justifyContent: \"flex-start\"\n    }\n  })"]},"metadata":{},"sourceType":"module"}